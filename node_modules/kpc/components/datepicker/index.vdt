import Input from '../input';
import Tooltip from '../tooltip';
import {_$} from '../utils';
import Calendar from './calendar';

const {
    value, clearable, className, style, _isShow,
    name, disabled, placeholder, size, transition,
    _value, range, type, ref, key, ...rest
} = self.get();

// pass the rest props to Calendar, except events
const _rest = {};
for (let key in rest) {
    if (key.substring(0, 3) !== 'ev-') {
        _rest[key] = rest[key];
    }
}

const classNameObj = {
    'k-datepicker': true,
    'k-disabled': disabled,
    'k-show': _isShow,
    [className]: className,
}

<div class={{ classNameObj }} style={{ style }}
    tabindex={{ disabled ? '-1' : '0' }}
    ev-keydown={{ self._onKeydown }}
>
    <Tooltip class="k-datepicker-content" 
        position={{ {my: 'left top', at: 'left bottom', collision: 'flip'} }}
        trigger="click"
        showArrow={{ false }}
        transition={{ transition }}
        ref="calendar"
        disabled={{ disabled }}
        ev-show={{ self._onShow }}
        ev-hide={{ self._onHide }}
        ev-$changed:show={{ self._onChangeShow }}
    >
        <Input
            placeholder={{ placeholder == null ? 
                (type === 'datetime' ? _$('请选择日期和时间') : _$('请选择日期')) :
                placeholder 
            }}
            readonly 
            value={{ Array.isArray(value) ? range ? value.join(' ~ ') : value.join(', ') : value }}
            clearable={{ clearable }}
            ev-clear={{ self.onClear }}
            name={{ name }}
            disabled={{ disabled }}
            size={{ size }}
            ref="input"
            tabindex="-1"
            ev-blur={{ self.onInputFocusOut }}
        >
            <b:suffix><i class="ion-ios-calendar-outline"></i></b:suffix>
        </Input>
        <b:content>
            <Calendar v-if={{ !range }}
                v-model="value" 
                {{ ..._rest }} 
                ev-hide={{ self._hide }}
                type={{ type }}
                ref="begin"
                ev-enter:select={{ self._focus }}
            />
            <div v-else class="k-range c-clearfix" ev-mouseleave={{ self._clearRangeEndDate }}>
                <Calendar
                    {{ ..._rest }} 
                    value={{ _value }}
                    ev-$change:value={{ self._onChangeValueForRange.bind(self, 'begin') }}
                    ref="begin"
                    ev-hide={{ self._hide }}
                    type={{ type }}
                    ev-$change:_showDate={{ self._onChangeShowDate.bind(self, 'begin') }}
                    ev-$inited={{ self._setBeginShowDate }}
                    dayClassNames={{ self._checkDateInRange }}
                    onMouseEnterDay={{ self._highlightRangeDays }}
                    multiple
                />
                <Calendar
                    {{ ..._rest }} 
                    value={{ _value }}
                    ev-$change:value={{ self._onChangeValueForRange.bind(self, 'end') }}
                    ref="end"
                    ev-hide={{ self._hide }}
                    type={{ type }}
                    ev-$change:_showDate={{ self._onChangeShowDate.bind(self, 'end') }}
                    ev-$inited={{ self._setEndShowDate }}
                    dayClassNames={{ self._checkDateInRange }}
                    onMouseEnterDay={{ self._highlightRangeDays }}
                    multiple
                />
            </div>
        </b:content>
    </Tooltip>
</div>
