'use strict';

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _input = require('../input');

var _input2 = _interopRequireDefault(_input);

var _tooltip = require('../tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _utils = require('../utils');

var _calendar = require('./calendar');

var _calendar2 = _interopRequireDefault(_calendar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        $this = this,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        value = _self$get.value,
        clearable = _self$get.clearable,
        className = _self$get.className,
        style = _self$get.style,
        _isShow = _self$get._isShow,
        name = _self$get.name,
        disabled = _self$get.disabled,
        placeholder = _self$get.placeholder,
        size = _self$get.size,
        transition = _self$get.transition,
        _value = _self$get._value,
        range = _self$get.range,
        type = _self$get.type,
        ref = _self$get.ref,
        key = _self$get.key,
        rest = (0, _objectWithoutProperties3.default)(_self$get, ['value', 'clearable', 'className', 'style', '_isShow', 'name', 'disabled', 'placeholder', 'size', 'transition', '_value', 'range', 'type', 'ref', 'key']);

    // pass the rest props to Calendar, except events


    var _rest = {};
    for (var _key in rest) {
        if (_key.substring(0, 3) !== 'ev-') {
            _rest[_key] = rest[_key];
        }
    }

    var classNameObj = (_classNameObj = {
        'k-datepicker': true,
        'k-disabled': disabled,
        'k-show': _isShow
    }, _classNameObj[className] = className, _classNameObj);

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'tabindex': function () {
            try {
                return [disabled ? '-1' : '0'][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-keydown': function () {
            try {
                return [self._onKeydown][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, h(_tooltip2.default, { 'className': 'k-datepicker-content', 'position': function () {
            try {
                return [{ my: 'left top', at: 'left bottom', collision: 'flip' }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'trigger': 'click', 'showArrow': function () {
            try {
                return [false][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'transition': function () {
            try {
                return [transition][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'disabled': function () {
            try {
                return [disabled][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-show': function () {
            try {
                return [self._onShow][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-hide': function () {
            try {
                return [self._onHide][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-$changed:show': function () {
            try {
                return [self._onChangeShow][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': h(_input2.default, { 'placeholder': function () {
                try {
                    return [placeholder == null ? type === 'datetime' ? (0, _utils._$)('请选择日期和时间') : (0, _utils._$)('请选择日期') : placeholder][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'readonly': function () {
                try {
                    return [true][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'value': function () {
                try {
                    return [Array.isArray(value) ? range ? value.join(' ~ ') : value.join(', ') : value][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'clearable': function () {
                try {
                    return [clearable][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'ev-clear': function () {
                try {
                    return [self.onClear][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'name': function () {
                try {
                    return [name][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'disabled': function () {
                try {
                    return [disabled][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'size': function () {
                try {
                    return [size][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'tabindex': '-1', 'ev-blur': function () {
                try {
                    return [self.onInputFocusOut][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'children': null, '_context': $this, '_blocks': function (blocks) {
                var _blocks = {},
                    __blocks = extend({}, blocks);
                return (_blocks["suffix"] = function (parent) {
                    return h('i', null, null, 'ion-ios-calendar-outline');
                }) && (__blocks["suffix"] = function (parent) {
                    var self = this;
                    return blocks["suffix"] ? blocks["suffix"].call(this, function () {
                        return _blocks["suffix"].call(self, parent);
                    }) : _blocks["suffix"].call(this, parent);
                }), __blocks;
            }.call(this, {}) }, null, null, null, function (i) {
            widgets['input'] = i;
        }), '_context': $this, '_blocks': function (blocks) {
            var _blocks = {},
                __blocks = extend({}, blocks);
            return (_blocks["content"] = function (parent) {
                return function () {
                    try {
                        return [!range][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this) ? h(_calendar2.default, (0, _extends3.default)({ 'v-model': 'value' }, function () {
                    try {
                        return [_rest][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), { 'ev-hide': function () {
                        try {
                            return [self._hide][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'type': function () {
                        try {
                            return [type][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'ev-enter:select': function () {
                        try {
                            return [self._focus][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'children': null, '_context': $this, value: _getModel(self, 'value'), 'ev-$change:value': function ev$changeValue(__c, __n) {
                        _setModel(self, 'value', __n, $this);
                    } }), null, null, null, function (i) {
                    widgets['begin'] = i;
                }) : h('div', { 'ev-mouseleave': function () {
                        try {
                            return [self._clearRangeEndDate][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this) }, [h(_calendar2.default, (0, _extends3.default)({}, function () {
                    try {
                        return [_rest][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), { 'value': function () {
                        try {
                            return [_value][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'ev-$change:value': function () {
                        try {
                            return [self._onChangeValueForRange.bind(self, 'begin')][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'ev-hide': function () {
                        try {
                            return [self._hide][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'type': function () {
                        try {
                            return [type][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'ev-$change:_showDate': function () {
                        try {
                            return [self._onChangeShowDate.bind(self, 'begin')][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'ev-$inited': function () {
                        try {
                            return [self._setBeginShowDate][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'dayClassNames': function () {
                        try {
                            return [self._checkDateInRange][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'onMouseEnterDay': function () {
                        try {
                            return [self._highlightRangeDays][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'multiple': function () {
                        try {
                            return [true][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'children': null, '_context': $this }), null, null, null, function (i) {
                    widgets['begin'] = i;
                }), h(_calendar2.default, (0, _extends3.default)({}, function () {
                    try {
                        return [_rest][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), { 'value': function () {
                        try {
                            return [_value][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'ev-$change:value': function () {
                        try {
                            return [self._onChangeValueForRange.bind(self, 'end')][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'ev-hide': function () {
                        try {
                            return [self._hide][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'type': function () {
                        try {
                            return [type][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'ev-$change:_showDate': function () {
                        try {
                            return [self._onChangeShowDate.bind(self, 'end')][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'ev-$inited': function () {
                        try {
                            return [self._setEndShowDate][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'dayClassNames': function () {
                        try {
                            return [self._checkDateInRange][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'onMouseEnterDay': function () {
                        try {
                            return [self._highlightRangeDays][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'multiple': function () {
                        try {
                            return [true][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'children': null, '_context': $this }), null, null, null, function (i) {
                    widgets['end'] = i;
                })], 'k-range c-clearfix');
            }) && (__blocks["content"] = function (parent) {
                var self = this;
                return blocks["content"] ? blocks["content"].call(this, function () {
                    return _blocks["content"].call(self, parent);
                }) : _blocks["content"].call(this, parent);
            }), __blocks;
        }.call(this, {}) }, null, null, null, function (i) {
        widgets['calendar'] = i;
    }), _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};