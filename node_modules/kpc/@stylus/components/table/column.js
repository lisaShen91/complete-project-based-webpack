'use strict';

exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _intact = require('intact');

var _intact2 = _interopRequireDefault(_intact);

var _column = require('./column.vdt');

var _column2 = _interopRequireDefault(_column);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TableColumn = (_temp = _class = function (_Intact) {
    (0, _inherits3.default)(TableColumn, _Intact);

    function TableColumn() {
        (0, _classCallCheck3.default)(this, TableColumn);
        return (0, _possibleConstructorReturn3.default)(this, _Intact.apply(this, arguments));
    }

    TableColumn.prototype.defaults = function defaults() {
        return {
            title: undefined,
            template: function template(data, index) {},

            key: '',
            sortable: false,
            width: undefined,
            group: undefined,
            multiple: false,
            value: [],

            // passed by parent
            $parent: undefined,
            _show: false
        };
    };

    TableColumn.prototype.onClick = function onClick(e) {
        this.trigger('click', e);
    };

    TableColumn.prototype.onDragStart = function onDragStart(e) {
        this.trigger('dragStart', e);
    };

    TableColumn.prototype._isChecked = function _isChecked(v) {
        var _get = this.get(),
            value = _get.value,
            multiple = _get.multiple;

        if (multiple) {
            return !!(value && ~value.indexOf(v));
        }
        return value === v;
    };

    TableColumn.prototype._onSelect = function _onSelect(v, c, e) {
        e.preventDefault();

        var _get2 = this.get(),
            value = _get2.value,
            multiple = _get2.multiple;

        if (multiple) {
            var tmp = value ? value.slice(0) : [];
            var index = tmp.indexOf(v);
            if (~index) {
                tmp.splice(index, 1);
            } else {
                tmp.push(v);
            }
            this.set('value', tmp);
        } else {
            this.set('value', v);
        }
    };

    TableColumn.prototype._onChangeShow = function _onChangeShow(c, v) {
        this.set('_show', v);
    };

    TableColumn.prototype._getGroupText = function _getGroupText() {
        var _get3 = this.get(),
            value = _get3.value,
            multiple = _get3.multiple,
            group = _get3.group;

        if (value == null) return;

        if (!multiple) {
            value = [value];
        }

        var ret = void 0;
        if (group) {
            ret = group.filter(function (item) {
                return ~value.indexOf(item.value);
            }).map(function (item) {
                return item.label;
            }).join(', ');
            if (ret) {
                return '(' + ret + ')';
            }
        }
    };

    TableColumn.prototype._stopPropagation = function _stopPropagation(e) {
        e.stopPropagation();
    };

    (0, _createClass3.default)(TableColumn, [{
        key: 'template',
        get: function get() {
            return _column2.default;
        }
    }]);
    return TableColumn;
}(_intact2.default), _class.propTypes = {
    sortable: Boolean,
    multiple: Boolean
}, _temp);
exports.default = TableColumn;
module.exports = exports['default'];