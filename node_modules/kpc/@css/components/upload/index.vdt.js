'use strict';

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

var _progress = require('../progress');

var _progress2 = _interopRequireDefault(_progress);

var _dialog = require('../dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj,
        _this = this;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        $this = this,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        className = _self$get.className,
        style = _self$get.style,
        accept = _self$get.accept,
        multiple = _self$get.multiple,
        limit = _self$get.limit,
        files = _self$get.files,
        children = _self$get.children,
        type = _self$get.type,
        _dragOver = _self$get._dragOver;

    var classNameObj = (_classNameObj = {
        'k-upload': true
    }, _classNameObj[className] = className, _classNameObj['k-drag'] = type === 'drag', _classNameObj['k-dragover'] = _dragOver, _classNameObj['k-gallery'] = type === 'gallery', _classNameObj);

    var events = {
        'ev-click': self._selectFile
    };
    if (type === 'drag') {
        events['ev-dragover'] = self._preventDefault;
        events['ev-dragenter'] = self._onDragEnter;
        events['ev-dragleave'] = self._onDragLeave;
        events['ev-drop'] = self._onDrop;
    }

    var handle = h('div', (0, _extends3.default)({}, function () {
        try {
            return [events][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)), (_blocks["content"] = function (parent) {
        return function () {
            try {
                return [children][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) ? (_blocks["children"] = function (parent) {
            return function () {
                try {
                    return [children][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this);
        }) && (__blocks["children"] = function (parent) {
            var self = this;
            return blocks["children"] ? blocks["children"].call(this, function () {
                return _blocks["children"].call(self, parent);
            }) : _blocks["children"].call(this, parent);
        }) && __blocks["children"].call(this) : function () {
            try {
                return [type !== 'gallery'][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) ? (_blocks["_list"] = function (parent) {
            return function () {
                try {
                    return [type === 'select'][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) ? h(_button2.default, { 'type': 'primary', 'children': function () {
                    try {
                        return [(0, _utils._$)('点击上传')][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), '_context': $this }) : h('div', null, [h('i', null, null, 'k-icon ion-upload'), h('div', null, function () {
                try {
                    return [(0, _utils._$)('将文件拖到此处，或点击上传')][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this))], 'k-area');
        }) && (__blocks["_list"] = function (parent) {
            var self = this;
            return blocks["_list"] ? blocks["_list"].call(this, function () {
                return _blocks["_list"].call(self, parent);
            }) : _blocks["_list"].call(this, parent);
        }) && __blocks["_list"].call(this) : (_blocks["_list"] = function (parent) {
            return h('i', null, null, 'k-picture-card k-add ion-ios-plus-empty');
        }) && (__blocks["_list"] = function (parent) {
            var self = this;
            return blocks["_list"] ? blocks["_list"].call(this, function () {
                return _blocks["_list"].call(self, parent);
            }) : _blocks["_list"].call(this, parent);
        }) && __blocks["_list"].call(this);
    }) && (__blocks["content"] = function (parent) {
        var self = this;
        return blocks["content"] ? blocks["content"].call(this, function () {
            return _blocks["content"].call(self, parent);
        }) : _blocks["content"].call(this, parent);
    }) && __blocks["content"].call(this), 'k-handle', null, function (i) {
        widgets['handle'] = i;
    });

    var CloseBtn = function CloseBtn(props) {
        return h(_button2.default, { 'type': 'none', 'icon': function () {
                try {
                    return [true][0];
                } catch (e) {
                    _e(e);
                }
            }.call(_this), 'size': 'mini', 'className': 'k-close', 'ev-click': function () {
                try {
                    return [self._removeFile.bind(self, props.value, props.index)][0];
                } catch (e) {
                    _e(e);
                }
            }.call(_this), 'children': h('i', null, null, _className(function () {
                try {
                    return ["k-icon " + props.icon][0];
                } catch (e) {
                    _e(e);
                }
            }.call(_this))), '_context': $this });
    };

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [h('input', { 'type': 'file', 'accept': function () {
            try {
                return [accept][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-change': function () {
            try {
                return [self._onInputChange][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'multiple': function () {
            try {
                return [multiple][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, null, 'c-hidden', null, function (i) {
        widgets['input'] = i;
    }), function () {
        try {
            return [type === 'gallery'][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h(Animate, { 'className': 'k-pictures', 'key': 'pictures', 'a:disabled': function () {
            try {
                return [true][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': [_Vdt.utils.map(function () {
            try {
                return [files][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), function (value, key) {
            return h(Animate, { 'className': _className(function () {
                    try {
                        return [{
                            "k-picture k-picture-card": true,
                            'k-error': value.status === 'error'
                        }][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this)), 'key': function () {
                    try {
                        return [value.uid][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'a:transition': 'dropdown', 'children': [h('img', { 'src': function () {
                        try {
                            return [value.url][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this) }), function () {
                    try {
                        return [value.status === 'ready' || value.status === 'uploading'][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this) ? h(Animate, { 'className': 'k-overlap', 'a:transition': 'fade', 'key': 'overlap', 'children': h(_progress2.default, { 'percent': function () {
                            try {
                                return [value.percent][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(this), 'size': 'mini', 'children': null, '_context': $this }), '_context': $this }) : h('div', { 'ev-click': function () {
                        try {
                            return [self._showImage.bind(self, value)][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this) }, h('i', null, null, 'k-zoom ion-ios-eye-outline'), 'k-overlap k-icons'), h(CloseBtn, { 'value': function () {
                        try {
                            return [value][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'index': function () {
                        try {
                            return [key][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'icon': 'ion-ios-close', 'children': null, '_context': $this })], '_context': $this });
        }, this), function () {
            try {
                return [!limit || files.length < limit][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) ? h(Animate, { 'key': 'handle', 'a:transition': 'dropdown', 'className': 'c-middle', 'children': function () {
                try {
                    return [handle][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), '_context': $this }) : undefined], '_context': $this }) : (_blocks["_handle"] = function (parent) {
        return function () {
            try {
                return [handle][0];
            } catch (e) {
                _e(e);
            }
        }.call(this);
    }) && (__blocks["_handle"] = function (parent) {
        var self = this;
        return blocks["_handle"] ? blocks["_handle"].call(this, function () {
            return _blocks["_handle"].call(self, parent);
        }) : _blocks["_handle"].call(this, parent);
    }) && __blocks["_handle"].call(this), function () {
        try {
            return [blocks.tip][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, (_blocks["tip"] = function (parent) {
        return null;
    }) && (__blocks["tip"] = function (parent) {
        var self = this;
        return blocks["tip"] ? blocks["tip"].call(this, function () {
            return _blocks["tip"].call(self, parent);
        }) : _blocks["tip"].call(this, parent);
    }) && __blocks["tip"].call(this), 'k-tip') : undefined, function () {
        try {
            return [type !== 'gallery'][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, _Vdt.utils.map(function () {
        try {
            return [files][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), function (value, key) {
        return h(Animate, (0, _extends3.default)({ 'className': _className(function () {
                try {
                    return [{ "k-file": true, 'k-error': value.status === 'error' }][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this)), 'key': function () {
                try {
                    return [value.uid][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'a:transition': 'expand' }, function () {
            try {
                return [_utils.expandAnimationCallbacks][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), { 'children': h('div', null, [h('div', null, [h('i', null, null, 'k-file-icon ion-document'), '\n                    ', function () {
                try {
                    return [value.name][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), '\n                    ', h('div', null, [h(CloseBtn, { 'value': function () {
                    try {
                        return [value][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'index': function () {
                    try {
                        return [key][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'icon': 'ion-ios-close-empty', 'children': null, '_context': $this }), function () {
                try {
                    return [value.status === 'done'][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) ? h('i', null, null, 'k-status-icon ion-ios-checkmark-outline') : undefined, function () {
                try {
                    return [value.status === 'error'][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) ? h('i', null, null, 'k-status-icon ion-ios-close-outline') : undefined], 'k-icons')], 'k-name c-ellipsis'), function () {
                try {
                    return [value.status === 'ready' || value.status === 'uploading'][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) ? h(Animate, (0, _extends3.default)({ 'key': 'progress', 'a:transition': 'expand' }, function () {
                try {
                    return [_utils.expandAnimationCallbacks][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), { 'children': h(_progress2.default, { 'percent': function () {
                        try {
                            return [value.percent][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'size': 'mini', 'children': null, '_context': $this }), '_context': $this })) : undefined], 'k-wrapper'), '_context': $this }));
    }, this), 'k-files') : undefined, h(_dialog2.default, { 'title': function () {
            try {
                return [(0, _utils._$)("查看图片")][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'key': 'dialog', 'v-model': '_showImage', 'className': 'k-upload-dialog', 'children': h('a', { 'href': function () {
                try {
                    return [self.get('_showedFile.url')][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'target': '_blank' }, h('img', { 'src': function () {
                try {
                    return [self.get('_showedFile.url')][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) })), '_context': $this, value: _getModel(self, '_showImage'), 'ev-$change:value': function ev$changeValue(__c, __n) {
            _setModel(self, '_showImage', __n, $this);
        } })], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};