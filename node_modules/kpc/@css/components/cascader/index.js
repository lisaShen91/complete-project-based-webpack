'use strict';

exports.__esModule = true;
exports.Cascader = exports.default = undefined;

var _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _desc, _value2, _class, _init, _class2, _temp;

var _intact = require('intact');

var _intact2 = _interopRequireDefault(_intact);

var _select = require('../select');

var _select2 = _interopRequireDefault(_select);

var _index = require('./index.vdt');

var _index2 = _interopRequireDefault(_index);

require('../../styles/kpc.css');

require('./index.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Cascader = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Select) {
    (0, _inherits3.default)(Cascader, _Select);

    function Cascader() {
        (0, _classCallCheck3.default)(this, Cascader);
        return (0, _possibleConstructorReturn3.default)(this, _Select.apply(this, arguments));
    }

    Cascader.prototype.defaults = function defaults() {
        return (0, _extends3.default)({}, _Select.prototype.defaults.call(this), {
            data: undefined,
            trigger: 'click',
            changeOnSelect: false,
            format: function format(values) {
                return values.map(function (value) {
                    return value.label;
                }).join(' / ');
            },
            filter: function filter(keywords, props) {
                return props.label.indexOf(keywords) > -1;
            },
            loadData: function loadData(item) {},

            _value: []
        });
    };

    Cascader.prototype._init = function _init() {
        var _this2 = this;

        this.set('_value', this.get('value'));
        this.on('$receive:value', function (c, v) {
            _this2.set('_value', v);
        });
    };

    Cascader.prototype._onClick = function _onClick(item, index) {
        var values = this.get('_value');
        if (!Array.isArray(values)) {
            values = [];
        } else {
            values = values.slice(0, index);
        }

        values[index] = item.value;

        this.set('_value', values, { async: true });
        if (this.get('changeOnSelect')) {
            this.set('value', values);
        }
    };

    Cascader.prototype._onSelect = function _onSelect() {
        this.set('value', this.get('_value').slice(0));
    };

    /**
     * on sub menu showed, load data if children is empty
     */


    Cascader.prototype._onSubMenuShow = function () {
        var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(item) {
            return _regenerator2.default.wrap(function _callee$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            if (!(item.children && !item.children.length)) {
                                _context.next = 4;
                                break;
                            }

                            _context.next = 3;
                            return this.get('loadData').call(this, item);

                        case 3:
                            this.update();

                        case 4:
                        case 'end':
                            return _context.stop();
                    }
                }
            }, _callee, this);
        }));

        function _onSubMenuShow(_x) {
            return _ref.apply(this, arguments);
        }

        return _onSubMenuShow;
    }();

    Cascader.prototype._clearValue = function _clearValue() {};

    Cascader.prototype.handleProps = function handleProps(props, labelObj, level) {
        var _get = this.get(),
            _value = _get._value,
            value = _get.value;

        var active = false;

        if (Array.isArray(_value)) {
            if (_value[level] === props.value) {
                active = true;
            }
        }

        if (Array.isArray(value)) {
            if (value[level] === props.value) {
                labelObj.values.push(props);
            }
        }

        return { active: active };
    };

    Cascader.prototype._onSearch = function _onSearch(e) {
        var keywords = e.target.value.trim();
        if (keywords) {
            _Select.prototype._onSearch.call(this, e);
        } else {
            this.set('keywords', keywords);
            this.refs.cascader.show();
        }
    };

    Cascader.prototype._filter = function _filter() {
        var _this3 = this;

        var _get2 = this.get(),
            data = _get2.data,
            keywords = _get2.keywords,
            filter = _get2.filter;

        var ret = [];

        var walk = function walk(data) {
            var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
            var valid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

            data.forEach(function (item) {
                var _valid = valid || filter.call(_this3, keywords, item);
                var _disabled = disabled || item.disabled;
                var _prefix = prefix.slice(0);
                _prefix.push(item);
                if (item.children) {
                    walk(item.children, _prefix, _valid, _disabled);
                } else if (_valid) {
                    _prefix.disabled = _disabled;
                    ret.push(_prefix);
                }
            });
        };
        walk(data);

        return ret;
    };

    Cascader.prototype._selectByFilter = function _selectByFilter(value) {
        var _value = value.map(function (item) {
            return item.value;
        });
        this.set({
            value: _value,
            _value: _value
        }, { async: true });
        this._resetSearch();
    };

    return Cascader;
}(_select2.default), _class2.template = _index2.default, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = (0, _getOwnPropertyDescriptor2.default)(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Cascader;
exports.Cascader = Cascader;